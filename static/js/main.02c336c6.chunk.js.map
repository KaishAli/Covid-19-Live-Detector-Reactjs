{"version":3,"sources":["images/COVID19.jpg","components/Card.jsx","components/Cards.jsx","service/api.js","components/Countries.jsx","components/Chart.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyle","makeStyles","header","background","padding","CardComponent","cardTitle","value","desc","lastUpdate","classes","Grid","component","Card","style","margin","borderBottom","Box","className","Typography","variant","color","CardContent","start","end","duration","seperator","Date","toDateString","useStyles","flexDirection","alignItems","display","container","marginBotton","Cards","data","confirmed","recovered","deaths","gutterBottom","spacing","justify","CircularProgress","url","fetchData","country","a","changedUrl","axios","get","fetchCountries","countries","map","name","Countries","handleCountryChange","useState","setCountries","useEffect","fetchApi","marginBottom","NativeSelect","onChange","e","target","i","width","marginTop","Chart","labels","datasets","label","backgroundColor","options","legend","title","text","App","state","fetchedData","setState","console","log","this","props","lastUpdated","src","logo","alt","Component","withStyles","justifyContent","textAlign","fontSize","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.02c336c6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/COVID19.a2427bb2.jpg\";","import { Grid, CardContent, Box, Typography, Card, makeStyles } from '@material-ui/core';\nimport CountUp from 'react-countup';\n\nconst useStyle = makeStyles({\n    header: {\n        background: '#F5F5F5',\n        padding: 10\n    }\n})\n\nconst CardComponent = ({cardTitle, value, desc, lastUpdate}) => { \n    const classes = useStyle();\n    return (\n        <Grid component={Card} style={{margin:20, borderBottom: '10px solid yellow'}}>\n            <Box className={classes.header}>\n                <Typography variant=\"h5\" color=\"textSecondary\">{cardTitle}</Typography>\n            </Box>\n            <CardContent>\n                <Typography variant=\"h5\">\n                    <CountUp start={0} end={value} duration={3} seperator=\",\" />\n                </Typography>\n                <Typography color=\"textSecondary\">{desc}</Typography>\n                <Typography>{new Date(lastUpdate).toDateString()}</Typography>\n            </CardContent>\n        </Grid>\n    );\n}\n\nexport default CardComponent;","import { Typography, Box, makeStyles, CircularProgress, Grid  } from \"@material-ui/core\";\nimport Card from './Card';\n\nconst useStyles = makeStyles({\n    component: {\n        margin: '50px 0',\n        flexDirection:'column',\n        alignItems: 'center',\n        display: 'flex' \n    },\n    container: {\n        color: '#8ACA2B',\n        marginBotton: 40\n    }\n})\n\nconst Cards = ({ data: {confirmed, recovered, deaths, lastUpdate }}) => { \n    const classes = useStyles();\n\n    if(!confirmed){\n        return <CircularProgress  />\n    }\n\n    return (\n        <Box className={classes.component}>\n            <Typography className = {classes.container} variant=\"h4\" gutterBottom>Coronavirus Cases Globally</Typography>\n            <Grid container spacing={3} justify=\"center\">\n                <Card \n                    cardTitle=\"Infected\"\n                    value={confirmed.value}\n                    desc=\"Number of Infected Cases of Covid-19\"\n                    lastUpdate={lastUpdate}\n                />\n                <Card \n                    cardTitle=\"Recovered\"\n                    value={recovered.value}\n                    desc=\"Number of Recovered Cases from Covid-19\"\n                    lastUpdate={lastUpdate}\n                />\n                <Card \n                    cardTitle=\"Deaths\"\n                    value={deaths.value}\n                    desc=\"Number of Deaths Caused by Covid-19\"\n                    lastUpdate={lastUpdate}\n                />\n            </Grid>\n        </Box>\n    )\n}\n\nexport default Cards;","import axios from 'axios';\n\n\nconst url = \"https://covid19.mathdro.id/api\";\n\n\nexport const fetchData = async (country) => {\n    let changedUrl = url;\n    if(country){\n        changedUrl = `${url}/countries/${country}`;\n    }\n    try{\n       const { data: { confirmed, recovered, deaths, lastUpdate } } =  await axios.get(changedUrl);\n       return { confirmed, recovered, deaths, lastUpdate };\n    }catch(error){\n        return error;\n    }\n}\n\nexport const fetchCountries = async() => {\n    try{\n        const { data: { countries } } = await axios.get(`${url}/countries`);\n        return countries.map(country => country.name );\n    }catch(error){\n        return error;\n    }\n}","import { Typography, NativeSelect } from \"@material-ui/core\";\nimport { useEffect, useState } from \"react\";\nimport { fetchCountries } from \"../service/api\";\n\n\n\nconst Countries = ({ handleCountryChange }) => {\n\n    const [ countries, setCountries ] = useState([]);\n\n    useEffect(() => {\n        const fetchApi = async() => {\n            setCountries(await fetchCountries());\n        }\n        fetchApi();\n    }, [])\n\n    return (\n        <>\n            <Typography style={{marginBottom: 20}} variant=\"h5\" color=\"textSecondary\">Reported Cases or Deaths by Country or Territory</Typography>\n            <NativeSelect onChange = {(e) => handleCountryChange(e.target.value)}>\n                <option value = \"\">United States</option>\n                { countries.map((country, i) => {\n                    return (\n                        <option key={i} value={country}>{country}</option>\n                    )\n                })}\n            </NativeSelect>\n        </>\n    )\n}\n\nexport default Countries;","import { Bar } from 'react-chartjs-2';\nimport { Box, makeStyles } from '@material-ui/core';\n\n\nconst useStyle = makeStyles({\n    container : {\n        width: '75%',\n        marginTop: 20\n    }\n})\n\nconst Chart = ({ data: { confirmed, recovered, deaths }}) => {\n    const classes = useStyle();\n    return (\n        <Box className = {classes.container}>\n            {confirmed ? (\n            <Bar \n                data = {{\n                    labels: ['Infected', 'Recovered', 'Deaths'],\n                    datasets: [{\n                        label: 'Peoples',\n                        data: [confirmed.value, recovered.value, deaths.value],\n                        backgroundColor: [\n                            'rgba(0, 0, 255, 0.5)',\n                            'rgba(0, 255, 0, 0.5)',\n                            'rgba(255, 0, 0, 0.5)',\n                        ],\n                    }]\n                }}\n                options = {{\n                    legend: {display: false},\n                    title: { display: true, text: 'Current State in Country'}\n                }}\n                \n            /> ) : ''\n        }   \n        </Box>\n            \n    )\n}\n\nexport default Chart;","import  { Component } from 'react'\nimport  { Box, Typography, withStyles } from '@material-ui/core';\nimport logo from './images/COVID19.jpg';\nimport Cards from './components/Cards';\nimport Countries from './components/Countries';\nimport Chart from './components/Chart';\nimport { fetchData } from './service/api';\n\nconst style = {\n  container: {\n    background: '#d3e1e8',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'column'\n  },\n  header: {\n    background: '#F5F5F5',\n    width: 400,\n    textAlign: 'center',\n    fontSize: 20,\n    padding: 10,\n    color: '#777'\n  },\n  lastUpdated: {\n    color: '#777',\n    fontSize: 12\n  }\n}\n\nclass App extends Component{\n\n  state = {\n    data: {},\n    country: ''\n  }\n\n  async componentDidMount(){\n    const fetchedData = await fetchData();\n    this.setState({data: fetchedData})\n    console.log(fetchedData);\n  }\n\n  handleCountryChange = async(country) => {\n    const fetchedData = await fetchData(country);\n    this.setState({data: fetchedData, country: country})\n    console.log(fetchedData);\n  }\n\n\n  render(){\n    const { data } = this.state;\n    return (\n      <Box className={this.props.classes.container}> \n        <Box className={this.props.classes.header}>COVID-19 CORONAVIRUS PANDEMIC</Box>\n        <Typography className={this.props.classes.lastUpdated}>Last Updated: {data.lastUpdate && new Date(data.lastUpdate).toDateString()}</Typography>\n        <img style={{width:350}} src={logo} alt=\"covid\"/>\n        <Cards data={data} />\n        <Countries handleCountryChange={this.handleCountryChange} />\n        <Chart data={data} />\n      </Box>\n    )\n  }\n}\n\nexport default withStyles(style)(App);","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}